# -*- coding: utf-8 -*-
"""Actividad2IA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BvXQjhU2LeIRXjuqc1aUKe2QlmK2HfRH
"""

from business_rules.actions import BaseActions, rule_action
from business_rules.fields import FIELD_TEXT
from business_rules.variables import BaseVariables

# Definir las variables del sistema
class RutaVariables(BaseVariables):
    def __init__(self, origen, destino):
        self.origen = origen
        self.destino = destino

# Definir las acciones del sistema
class RutaActions(BaseActions):
    def __init__(self):
        pass

    @rule_action(params={"ruta": FIELD_TEXT})
    def mostrar_ruta(self, ruta):
        print("La mejor ruta es:", ruta)

# Definir las reglas para encontrar la mejor ruta
def definir_reglas(origen, destino):
    # Definir reglas lógicas
    rules = [
        {
            "conditions": {
                "all": [
                    {"name": "origen", "operator": "is_equal_to", "value": "Punto A"},
                    {"name": "destino", "operator": "is_equal_to", "value": "Punto B"}
                ]
            },
            "actions": [
                {"params": {"ruta": "Tomar la línea directa desde Punto A hasta Punto B"}}
            ]
        },
        {
            "conditions": {
                "all": [
                    {"name": "origen", "operator": "is_equal_to", "value": "Punto A"},
                    {"name": "destino", "operator": "is_equal_to", "value": "Punto C"}
                ]
            },
            "actions": [
                {"params": {"ruta": "Tomar la línea desde Punto A hasta una estación de transbordo, luego transbordar a la línea correspondiente y continuar hasta Punto C"}}
            ]
        },
        {
            "conditions": {
                "all": [
                    {"name": "origen", "operator": "is_equal_to", "value": "Punto B"},
                    {"name": "destino", "operator": "is_equal_to", "value": "Punto C"}
                ]
            },
            "actions": [
                {"params": {"ruta": "Tomar la línea directa desde Punto B hasta Punto C"}}
            ]
        }
    ]
    return rules

def encontrar_mejor_ruta(origen, destino):
    variables = RutaVariables(origen, destino)
    actions = RutaActions()
    rules = definir_reglas(origen, destino)

    for rule in rules:
        # Verificar si se cumplen todas las condiciones de la regla
        conditions_met = all(getattr(variables, condition["name"]) == condition["value"] for condition in rule["conditions"]["all"])

        # Si se cumplen todas las condiciones, ejecutar las acciones de la regla
        if conditions_met:
            for action in rule["actions"]:
                action_name = action["params"]["ruta"]
                getattr(actions, "mostrar_ruta")(action_name)
            break  # Solo ejecutar la primera regla que cumple las condiciones
# Ejemplo de uso
if __name__ == "__main__":
    origen = 'Punto A'
    destino = 'Punto B'
    encontrar_mejor_ruta(origen, destino)